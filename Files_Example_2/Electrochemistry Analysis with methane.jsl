// Import text file: GSTAT_ALL.txt
// → Data Table( "GSTAT_ALL" )
Open(
	"GSTAT_ALL.txt",
	columns(
		New Column( "T(Seconds)", Numeric, "Continuous", Format( "Best", 12 ) ),
		New Column( "E(V)", Numeric, "Continuous", Format( "Best", 12 ) ),
		New Column( "I(A/cm2)", Numeric, "Continuous", Format( "Best", 12 ) ),
		New Column( "Temp(C)", Numeric, "Continuous", Format( "Best", 12 ) )
	),
	Import Settings(
		End Of Line( CRLF, CR, LF ),
		End Of Field( Tab, Comma, CSV( 1 ) ),
		Strip Quotes( 1 ),
		Use Apostrophe as Quotation Mark( 0 ),
		Use Regional Settings( 0 ),
		Scan Whole File( 1 ),
		Treat empty columns as numeric( 0 ),
		CompressNumericColumns( 0 ),
		CompressCharacterColumns( 0 ),
		CompressAllowListCheck( 0 ),
		Labels( 1 ),
		Column Names Start( 1 ),
		Data Starts( 2 ),
		Lines To Read( "All" ),
		Year Rule( "20xx" )
	)
);
// Change column name: I(A/cm2) → I(A)
"I(A/cm2)"n << Set Name( "I(A)" );


// New column: Column 5
New Column( "Column 5",
	Numeric,
	"Continuous",
	Format( "Best", 12 )
);


// Change column name: Column 5 → J(mA/cm2)
Column 5 << Set Name( "J(mA/cm2)" );


// Change column formula: J(mA/cm2)
"J(mA/cm2)"n << Set Formula( (:"I(A)"n / 10) * 1000 );


// Report snapshot: GSTAT1 - Graph Builder

Graph Builder(
	Size( 839, 634 ),
	Legend Position( "Inside Left" ),
	Variables(
		X( :"T(Seconds)"n ),
		Y( :"E(V)"n ),
		Y( :"J(mA/cm2)"n, Position( 1 ), Side( "Right" ) )
	),
	Elements(
		Points( X, Y( 2 ), Legend( 7 ) ),
		Smoother( Legend( 8 ), Lambda( 0.000001 ) ),
		Line( X, Y( 1 ), Legend( 12 ) )
	),
	SendToReport(
		Dispatch(
			{},
			"T(Seconds)",
			ScaleBox,
			{Min( -100 ), Max( 11500 ), Inc( 2000 ),
			Minor Ticks( 3 )}
		),
		Dispatch(
			{},
			"E(V)",
			ScaleBox,
			{Format( "Best", 12 ), Min( -3.5 ), Max( 0 ), Inc( 0.5 ),
			Minor Ticks( 4 )}
		),
		Dispatch(
			{},
			"J(mA/cm2)",
			ScaleBox,
			{Min( -350 ), Max( 0 ), Inc( 50 ), Minor Ticks( 0 )}
		),
		Dispatch(
			{},
			"400",
			ScaleBox,
			{Legend Model( 12, Level Name( 0, "E(V)", Item ID( "Mean(E(V))", 1 ) ) )
			}
		),
		Dispatch( {}, "Y title", TextEditBox, {Set Text( "E(V vs. Ag/AgCl)" )} ),
		Dispatch( {}, "400", LegendBox, {Legend Position( {7, [1], 12, [0]} )} )
	)
);

Open(
	"GC_outputs.xlsx",
	Worksheets( "Sheet1" ),
	Use for all sheets( 1 ),
	Concatenate Worksheets( 0 ),
	Create Concatenation Column( 0 ),
	Worksheet Settings(
			1,
			Has Column Headers( 1 ),
			Number of Rows in Headers( 1 ),
			Headers Start on Row( 1 ),
			Data Starts on Row( 2 ),
			Data Starts on Column( 2 ),
			Data Ends on Row( 0 ),
			Data Ends on Column( 6 ),
			Replicated Spanned Rows( 1 ),
			Replicated Spanned Headers( 0 ),
			Suppress Hidden Rows( 1 ),
			Suppress Hidden Columns( 1 ),
			Suppress Empty Columns( 1 ),
			Treat as Hierarchy( 1 ),
			Multiple Series Stack( 0 ),
			Import Cell Colors( 0 ),
			Limit Column Detect( 0 ),
			Column Separator String( "-" )
		)
	);
// New column: Column 1

Data Table( "Sheet1" ) << New Column( "Column 1",
	Numeric,
	"Continuous",
	Format( "Best", 12 ),
	Set Selected,
		Set Values(
			[-50, -50, -100, -100, -150, -150, -200, -200, -250, -250, -300, -300]);
) << Move Selected Columns( {:Column 1}, To First );

// Change column name: Column 1 → Current Density (mAcm-2)
Data Table( "Sheet1" ):Column 1 << Set Name( "Current Density (mAcm-2)" );


// Change column name: Hydrogen → H2
Data Table( "Sheet1" ):Hydrogen << Set Name( "H2" );


// Change column name: Carbon monoxide → CO
Data Table( "Sheet1" ):Carbon monoxide << Set Name( "CO" );


// Change column name: Nitrogen → N2
Data Table( "Sheet1" ):Nitrogen << Set Name( "N2" );

// Change column name: Methane → CH4
Data Table( "Sheet1" ):Methane << Set Name( "CH4" );

// Change column name: Ethylene → C2H4
Data Table( "Sheet1" ):Ethylene << Set Name( "C2H4" );

// New column: Column 7
New Column( "Column 7",
	Numeric,
	"Continuous",
	Format( "Best", 12 )
);

// Change column name: Column 7 → CO2 flow rate (ml/min)
Column 7 << Set Name( "CO2 flow rate (ml/min)" );

// Change column formula: CO2 flow rate (ml/min)
"CO2 flow rate (ml/min)"n <<
Set Formula( (:N2 - 257051.28935) / -4313.06376 );

// New column: Column 8
New Column( "Column 8",
	Numeric,
	"Continuous",
	Format( "Best", 12 )
);

// Change column name: Column 8 → J(H2) (mAcm-2)
Column 8 << Set Name( "J(H2) (mAcm-2)" );

// Change column info: H2
H2 << Data Type( Numeric ) <<
Set Field Width( 12 );
H2 << Set Modeling Type( "Continuous" );


// New column: Column 9
New Column( "Column 9",
	Numeric,
	"Continuous",
	Format( "Best", 12 )
);

// Change column name: Column 9 → J (CO) (mAcm-2)
Column 9 << Set Name( "J (CO) (mAcm-2)" );

// New column: Column 10
New Column( "Column 10",
	Numeric,
	"Continuous",
	Format( "Best", 12 )
);

// Change column name: Column 10 → J (CH4) (mAcm-2)
Column 10 << Set Name( "J (CH4) (mAcm-2)" );


// New column: Column 11
New Column( "Column 11",
	Numeric,
	"Continuous",
	Format( "Best", 12 )
);


// Change column name: Column 11 → J (C2H4) (mAcm-2)
Column 11 << Set Name( "J (C2H4) (mAcm-2)" );


// New column: Column 12
New Column( "Column 12",
	Numeric,
	"Continuous",
	Format( "Best", 12 )
);


// Change column name: Column 12 → FE(H2) (%)
Column 12 << Set Name( "FE(H2) (%)" );


// New column: Column 13
New Column( "Column 13",
	Numeric,
	"Continuous",
	Format( "Best", 12 )
);


// Change column name: Column 13 → FE(CO) (%)
Column 13 << Set Name( "FE(CO) (%)" );

// New column: Column 14
New Column( "Column 14",
	Numeric,
	"Continuous",
	Format( "Best", 12 )
);


// Change column name: Column 14 → FE(CH4) (%)
Column 14 << Set Name( "FE(CH4) (%)" );


// New column: Column 15
New Column( "Column 15",
	Numeric,
	"Continuous",
	Format( "Best", 12 )
);


// Change column name: Column 15 → FE(C2H4) (%)
Column 15 << Set Name( "FE(C2H4) (%)" );

// Change column formula: J(H2) (mAcm-2)
"J(H2) (mAcm-2)"n <<
Set Formula(
	(((:H2 - 814.35) / (12739.3671 * 100)) * 2 * (96485.3329 / 24465.3953)) * (
	:"CO2 flow rate (ml/min)"n / 60) * (1000 / 10)
);

// Change column formula: J (CO) (mAcm-2)
"J (CO) (mAcm-2)"n <<
Set Formula(
	((:CO - 152.05) / (11343 * 100)) * 2 * (96485.3329 / 24465.3953) * (
	:"CO2 flow rate (ml/min)"n / 60) * (1000 / 10)
);

// Change column formula: J (CH4) (mAcm-2)
"J (CH4) (mAcm-2)"n <<
Set Formula(
	((:CH4 - 1.1672) / (1590.4 * 100)) * 8 * (96485.3329 / 24465.3953) * (
			:"CO2 flow rate (ml/min)"n / 60) * (1000 / 10)
);

// Change column formula: J (C2H4) (mAcm-2)
"J (C2H4) (mAcm-2)"n <<
Set Formula(
	((:C2H4 - 102.27) / (1843.5 * 100)) * 12 * (96485.3329 / 24465.3953) * (
	:"CO2 flow rate (ml/min)"n / 60) * (1000 / 10)
);

// Change column formula: FE(H2) (%)
"FE(H2) (%)"n <<
Set Formula( Abs( (:"J(H2) (mAcm-2)"n / :"Current Density (mAcm-2)"n) * 100 ) );

// Change column formula: FE(CO) (%)
"FE(CO) (%)"n <<
Set Formula( Abs( (:"J (CO) (mAcm-2)"n / :"Current Density (mAcm-2)"n) * 100 ) );

// Change column formula: FE(CH4) (%)
"FE(CH4) (%)"n <<
Set Formula( Abs( (:"J (CH4) (mAcm-2)"n / :"Current Density (mAcm-2)"n) * 100 ) );


// Change column formula: FE(C2H4) (%)
"FE(C2H4) (%)"n <<
Set Formula( Abs( (:"J (C2H4) (mAcm-2)"n / :"Current Density (mAcm-2)"n) * 100 ) );

// New column: Column 16
New Column( "Column 16",
	Numeric,
	"Continuous",
	Format( "Best", 12 )
);

// Change column name: Column 16 → Total Gaseous FE (%)
Column 16 << Set Name( "Total Gaseous FE (%)" );


// Change column formula: Total Gaseous FE (%)
"Total Gaseous FE (%)"n <<
Set Formula( :"FE(H2) (%)"n + :"FE(CO) (%)"n + :"FE(CH4) (%)"n + :"FE(C2H4) (%)"n );


// Save data table as: GCprocessed.jmp
Data Table( "Sheet1" ) << Save(
"GCprocessed.jmp"
);


Graph Builder(
	Size( 627, 493 ),
	Show Control Panel( 0 ),
	Legend Position( "Inside Left" ),
	Variables(
		X( :"Current Density (mAcm-2)"n ),
		Y( :"FE(H2) (%)"n ),
		Y( :"FE(CO) (%)"n, Position( 1 ) ),
		Y( :"FE(CH4) (%)"n, Position( 1 ) ),
		Y( :"FE(C2H4) (%)"n, Position( 1 ) )
	),
	Elements(
		Bar(
			X,
			Y( 1 ),
			Y( 2 ),
			Y( 3 ),
			Y( 4 ),
			Legend( 5 ),
			Bar Style( "Stacked" )
		)
	),
	SendToReport(
		Dispatch(
			{},
			"FE(H2) (%)",
			ScaleBox,
			{Min( 0 ), Max( 100.54347826087 ), Inc( 20 ), Minor Ticks( 0 )}
		),
		Dispatch(
			{},
			"400",
			ScaleBox,
			{Legend Model(
				5,
				Level Name( 0, "FE(H2) (%)", Item ID( "Mean(FE(H2) (%))", 1 ) ),
				Level Name( 1, "FE(CO) (%)", Item ID( "Mean(FE(CO) (%))", 1 ) ),
				Level Name( 2, "FE(CH4) (%)", Item ID( "Mean(FE(CH4) (%))", 1 ) ),
				Level Name( 3, "FE(C2H4) (%)", Item ID( "Mean(FE(C2H4) (%))", 1 ) )
			)}
		),
		Dispatch( {}, "graph title", TextEditBox, {Set Text( "" )} ),
		Dispatch(
			{},
			"Y title",
			TextEditBox,
			{Set Text( "Faradaic Efficiency (%)" )}
		)
	)
);

Graph Builder(
	Size( 627, 493 ),
	Show Control Panel( 0 ),
	Legend Position( "Inside Left" ),
	Variables(
		X( :"Current Density (mAcm-2)"n ),
		Y( :"FE(H2) (%)"n ),
		Y( :"FE(CO) (%)"n, Position( 1 ) ),
		Y( :"FE(CH4) (%)"n, Position( 1 ) ),
		Y( :"FE(C2H4) (%)"n, Position( 1 ) )
	),
	Elements(
		Bar(
			X,
			Y( 1 ),
			Y( 2 ),
			Y( 3 ),
			Y( 4 ),
			Legend( 5 ),
			Error Interval( "Standard Error" )
		)
	),
	SendToReport(
		Dispatch(
			{},
			"FE(H2) (%)",
			ScaleBox,
			{Min( 0 ), Max( 100.54347826087 ), Inc( 20 ), Minor Ticks( 0 )}
		),
		Dispatch(
			{},
			"400",
			ScaleBox,
			{Legend Model(
				5,
				Level Name( 0, "FE(H2) (%)", Item ID( "Mean(FE(H2) (%))", 1 ) ),
				Level Name( 1, "FE(CO) (%)", Item ID( "Mean(FE(CO) (%))", 1 ) ),
				Level Name( 2, "FE(CH4) (%)", Item ID( "Mean(FE(CH4) (%))", 1 ) ),
				Level Name( 3, "FE(C2H4) (%)", Item ID( "Mean(FE(C2H4) (%))", 1 ) )
			)}
		),
		Dispatch( {}, "graph title", TextEditBox, {Set Text( "" )} ),
		Dispatch(
			{},
			"Y title",
			TextEditBox,
			{Set Text( "Faradaic Efficiency (%)" )}
		)
	)
);
/*
Graph Builder(
	Size( 792, 555 ),
	Show Control Panel( 0 ),
	Legend Position( "Inside Left" ),
	Variables(
		X( :"Current Density (mAcm-2)"n ),
		Y( :"CO2 flow rate (ml/min)"n, Side( "Right" ) ),
		Y( :"J(H2) (mAcm-2)"n, Position( 1 ) ),
		Y( :"J (C2H4) (mAcm-2)"n, Position( 1 ) ),
		Y( :"J (CO) (mAcm-2)"n, Position( 1 ) )
	),
	Elements(
		Points( X, Legend( 7 ) ),
		Smoother(
			X,
			Y( 1 ),
			Legend( 8 ),
			Lambda( 0.0219028182806845 ),
			Confidence of Fit( 1 )
		),
		Points( X, Y( 2 ), Y( 3 ), Y( 4 ), Legend( 9 ) ),
		Line Of Fit( X, Y( 2 ), Y( 3 ), Y( 4 ), Legend( 11 ) )
	),
	SendToReport(
		Dispatch(
			{},
			"Current Density (mAcm-2)",
			ScaleBox,
			{Min( -250 ), Max( -50 ), Inc( 50 ), Minor Ticks( 0 )}
		),
		Dispatch(
			{},
			"J(H2) (mAcm-2)",
			ScaleBox,
			{Min( 0 ), Max( 200 ), Inc( 50 ), Minor Ticks( 1 )}
		),
		Dispatch(
			{},
			"CO2 flow rate (ml/min)",
			ScaleBox,
			{Min( 20 ), Max( 40 ), Inc( 5 ), Minor Ticks( 1 )}
		),
		Dispatch(
			{},
			"400",
			ScaleBox,
			{Legend Model(
				8,
				Level Name(
					0,
					"CO2 flow rate",
					Item ID( "Smooth(CO2 flow rate (ml/min))", 1 )
				)
			), Legend Model(
				9,
				Level Name( 0, "FE(H2) (%)", Item ID( "Mean(FE(H2) (%))", 1 ) ),
				Level Name( 1, "FE(CO) (%)", Item ID( "Mean(FE(CO) (%))", 1 ) ),
				Level Name( 2, "FE(CH4) (%)", Item ID( "Mean(FE(CH4) (%))", 1 ) ),
				Level Name( 3, "FE(C2H4) (%)", Item ID( "Mean(FE(C2H4) (%))", 1 ) )
			)}
		),
		Dispatch( {}, "Y title", TextEditBox, {Set Text( "Partial J (mAcm-2)" )} ),
		Dispatch(
			{},
			"400",
			LegendBox,
			{Legend Position(
				{7, [-1], 8, [3, -3], 9, [0, 1, 2], 11, [-1, -1, -1, -3, -3, -3]}
			)}
		)
	)
);
*/
